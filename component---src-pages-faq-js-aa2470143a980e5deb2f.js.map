{"version":3,"sources":["webpack:///./src/components/faq/BlockHow.js","webpack:///./src/components/faq/BlockEth.js","webpack:///./src/components/faq/block1.js","webpack:///./src/pages/faq.js"],"names":["BlockHow","data","className","allMarkdownRemark","nodes","map","val","key","k","title","frontmatter","html","BlockEth","Arrow","show","width","height","style","right","top","transform","fillRule","fill","d","FaqItem","useState","setShow","onClick","paddingTop","paddingBottom","left","color","slice","dangerouslySetInnerHTML","__html","BlockAbout","injectIntl","intl","formatMessage","id","defaultMessage","classNames","Faq"],"mappings":"uLA2BeA,EAxBE,WACb,IAAMC,EAAI,OAaV,OACI,yBAAKC,UAAU,IACVD,EAAKE,kBAAkBC,MAAMC,KAAI,SAACC,EAAIC,GACpC,OACI,kBAAC,EAAD,CAASC,EAAGD,EAAKA,IAAKA,EAAKE,MAAOH,EAAII,YAAYD,MAAOE,KAAML,EAAIK,Y,SCMvEC,EAxBE,WACb,IAAMX,EAAI,OAaV,OACI,yBAAKC,UAAU,IACVD,EAAKE,kBAAkBC,MAAMC,KAAI,SAACC,EAAIC,GACpC,OACI,kBAAC,EAAD,CAASC,EAAGD,EAAKA,IAAKA,EAAKE,MAAOH,EAAII,YAAYD,MAAOE,KAAML,EAAIK,YCZzEE,EAAQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OACI,yBAAKC,MAAM,OAAOC,OAAO,MAAMd,UAAU,wBAAwBe,MAAO,CAACC,MAAO,IAAIC,IAAK,OAAOC,UAAWN,EAAO,iBAAkB,iBAApI,IAAsJ,0BAAMO,SAAS,UAAWC,KAAK,kBAC5LC,EAAE,6UAIUC,EAAU,SAAC,GAAoB,IAAnBhB,EAAkB,EAAlBA,EAAEC,EAAgB,EAAhBA,MAAME,EAAU,EAAVA,KAAU,EAChBc,oBAAS,GAAzBX,EADgC,KAC3BY,EAD2B,KAEvC,OACI,yBAAKC,QAAS,kBAAID,GAASZ,IAAOZ,UAAS,+CAAgDM,EAAI,WAAW,MAAQS,MAAO,CAACW,WAAY,OAAOC,cAAe,SACxJ,yBAAK3B,UAAU,2CAA2Ce,MAAO,CAACa,KAAM,IAAIX,IAAK,OAAOC,UAAW,iBAAiBW,MAAO,YAA3H,IAA4I,KAAKvB,EAAE,IAAIwB,OAAO,IAC9J,yBAAK9B,UAAS,oCAAqCY,EAAO,yBAAyB,yBAA2BL,GAC9G,kBAAC,EAAD,CAAOK,KAAMA,IACb,yBAAKZ,UAAS,yDAA0DY,EAAO,KAAO,UAAYmB,wBAAyB,CAACC,OAAQvB,OAI1IwB,EAAa,WACf,IAAMlC,EAAI,OAaV,OACI,yBAAKC,UAAU,IACVD,EAAKE,kBAAkBC,MAAMC,KAAI,SAACC,EAAIC,GACpC,OACI,kBAAC,EAAD,CAASC,EAAGD,EAAKA,IAAKA,EAAKE,MAAOH,EAAII,YAAYD,MAAOE,KAAML,EAAIK,YA2BvEyB,wBArBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACb,OACI,oCACI,kBAAC,IAAD,CAAa5B,MAAO4B,EAAKC,cAAc,CAACC,GAAI,iBAAiBC,eAAgB,UAC7E,kBAAC,IAAD,CAAWC,WAAW,mBAClB,yBAAKvC,UAAU,qCACX,yBAAKA,UAAU,8DAA6D,0BAAMA,UAAU,0BAAhB,gBAA5E,sBACA,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,8DAA6D,0BAAMA,UAAU,0BAAhB,WAA5E,SACA,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,8DAA6D,0BAAMA,UAAU,0BAAhB,gBAA5E,mBACA,kBAAC,EAAD,Y,SCpDLwC,UATH,WACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKjC,MAAM,QACX,kBAAC,EAAD,S","file":"component---src-pages-faq-js-aa2470143a980e5deb2f.js","sourcesContent":["import React from 'react'\nimport {FaqItem} from './block1'\nimport {useStaticQuery,graphql} from 'gatsby'\nconst BlockHow = () => {\n    const data = useStaticQuery(graphql`\n        query HowFaq {\n            allMarkdownRemark(filter: {frontmatter: {tags: {regex: \"/how/\"}}}, sort: {fields: frontmatter___tags}) {\n                nodes {\n                frontmatter {\n                    title\n                    tags\n                }\n                html\n                }\n            }\n        }    \n    `)\n    return (\n        <div className=\"\">\n            {data.allMarkdownRemark.nodes.map((val,key)=>{\n               return (\n                   <FaqItem k={key} key={key} title={val.frontmatter.title} html={val.html} />\n               )\n            })}            \n        </div>\n    )\n}\nexport default BlockHow","import React from 'react'\nimport {FaqItem} from './block1'\nimport {useStaticQuery,graphql} from 'gatsby'\nconst BlockEth = () => {\n    const data = useStaticQuery(graphql`\n        query EthFaq {\n            allMarkdownRemark(filter: {frontmatter: {tags: {regex: \"/iss/\"}}}, sort: {fields: frontmatter___tags}) {\n                nodes {\n                frontmatter {\n                    title\n                    tags\n                }\n                html\n                }\n            }\n        }    \n    `)\n    return (\n        <div className=\"\">\n            {data.allMarkdownRemark.nodes.map((val,key)=>{\n               return (\n                   <FaqItem k={key} key={key} title={val.frontmatter.title} html={val.html} />\n               )\n            })}            \n        </div>\n    )\n}\nexport default BlockEth","import React,{useState} from 'react'\nimport {Container,BlockHeader} from '../common'\nimport {useStaticQuery,graphql} from 'gatsby'\nimport {injectIntl,FormattedMessage} from 'gatsby-plugin-intl'\nimport BlockSign from './BlockSign'\nimport BlockRef from './BlockRef'\nimport BlockRisk from './BlockRisk'\nimport BlockHow from './BlockHow'\nimport BlockEth from './BlockEth'\nexport const Arrow = ({show}) => {\n    return (\n        <svg width=\"13px\" height=\"9px\" className=\"absolute fill-current\" style={{right: '0',top: '28px',transform: show ? 'rotate(180deg)': 'rotate(0deg)'}}> <path fillRule=\"evenodd\"  fill=\"rgb(36, 64, 92)\"\n d=\"M6.756,8.874 L12.948,0.455 C13.013,0.366 13.020,0.251 12.967,0.155 C12.913,0.060 12.808,-0.000 12.693,-0.000 L0.309,-0.000 C0.194,-0.000 0.088,0.060 0.035,0.155 C0.011,0.198 -0.000,0.244 -0.000,0.290 C-0.000,0.348 0.018,0.406 0.054,0.455 L6.246,8.874 C6.304,8.953 6.399,9.000 6.501,9.000 C6.603,9.000 6.698,8.953 6.756,8.874 Z\"/>\n</svg>\n    )\n}\nexport const FaqItem = ({k,title,html}) => {\n    const [show,setShow] = useState(false);\n    return (\n        <div onClick={()=>setShow(!show)} className={`pl-8 xl:pl-16 pr-4 relative cursor-pointer ${k ? 'border-t':null}`} style={{paddingTop: '20px',paddingBottom: '20px'}}>\n            <div className=\"absolute font-sans text-14 font-semibold\" style={{left: '0',top: '20px',transform: 'translate(0,0)',color: '#cccccc'}}>{`${(\"0\"+(k+1)).slice(-2)}`}</div>\n            <div className={`text-14 font-sans font-semibold ${show ? 'text-lights-orangebold':'text-lights-bluebold'}`}>{title}</div>\n            <Arrow show={show}/>\n            <div className={`font-sans text-14 text-lights-bluebold faq-item mt-4 ${show ? null : 'hidden'}`} dangerouslySetInnerHTML={{__html: html}}/>\n        </div>\n    )\n}\nconst BlockAbout = () => {\n    const data = useStaticQuery(graphql`\n        query AboutFaq {\n            allMarkdownRemark(filter: {frontmatter: {tags: {regex: \"/about/\"}}}, sort: {fields: frontmatter___tags}) {\n                nodes {\n                frontmatter {\n                    title\n                    tags\n                }\n                html\n                }\n            }\n        }\n    `)\n    return (\n        <div className=\"\">\n            {data.allMarkdownRemark.nodes.map((val,key)=>{\n               return (\n                   <FaqItem k={key} key={key} title={val.frontmatter.title} html={val.html} />\n               )\n            })}            \n        </div>\n    )\n}\nconst Block1 = ({intl}) => {\n    return (\n        <>\n            <BlockHeader title={intl.formatMessage({id: \"global.nav.faq\",defaultMessage: \"Faq\"})}/>\n            <Container classNames=\"bg-lights-white\">\n                <div className=\"px-4 py-4 shadow-lg mb-8 bg-white\">\n                    <div className=\"font-sans font-bold text-16 text-lights-bluebold uppercase\"><span className=\"text-lights-orangebold\">About System</span> and Risks if any </div>\n                    <BlockAbout />\n                </div>\n                <div className=\"px-4 py-4 shadow-lg mb-8 bg-white\">\n                    <div className=\"font-sans font-bold text-16 text-lights-bluebold uppercase\"><span className=\"text-lights-orangebold\">How It </span>Works</div>\n                    <BlockHow />\n                </div>\n                <div className=\"px-4 py-4 shadow-lg mb-8 bg-white\">\n                    <div className=\"font-sans font-bold text-16 text-lights-bluebold uppercase\"><span className=\"text-lights-orangebold\">Ethereum and</span> wallet issues </div>\n                    <BlockEth />\n                </div>\n            </Container>\n        </>\n    )\n}\nexport default injectIntl(Block1)","import React from 'react'\nimport Layout from '../components/layout'\nimport Block1 from '../components/faq/block1'\nimport Seo from '../components/seo'\n\nconst Faq = () => {\n    return (\n        <Layout>\n            <Seo title=\"FAQ\"/>\n            <Block1 />\n        </Layout>\n    )\n}\n\nexport default Faq;"],"sourceRoot":""}