{"version":3,"sources":["webpack:///./src/components/how/block1.js","webpack:///./src/pages/howitworks.js"],"names":["HowItems","config","howItems","HowBlock1Items","howBlockItems","BlockHowItem","path","title","desc","bg","border","classBox","none","className","data-aos","data-aos-offset","src","alt","HowChildItem","content","InjectHowBlock1Item","injectIntl","n","t","d","intl","style","backgroundImage","map","val","key","formatMessage","id","defaultMessage","classNames","titleId","descId","class","noup","linetwo","HowItWorks"],"mappings":"uJAIMA,EAAWC,EAAOC,SAClBC,EAAiBF,EAAOG,cACxBC,EAAe,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,GAA6B,EAA1BC,OAA0B,EAAnBC,SAAmB,EAAVC,KACtD,OACI,yBAAKC,UAAS,mCAAsCC,WAAS,UAAUC,kBAAgB,QACnF,yBAAKF,UAAU,YACX,yBAAKA,UAAS,+DAAiEJ,GAC3E,yBAAKO,IAAKV,EAAMW,IAAI,GAAGJ,UAAU,cAGzC,yBAAKA,UAAS,sBACV,yBAAKA,UAAU,mEAAmEN,GAClF,yBAAKM,UAAU,2CAA2CL,MAKpEU,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,yBAAKN,UAAU,0CACVM,IAgBPC,EAAsBC,sBAZN,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,EAAEC,EAAc,EAAdA,EAAEC,EAAY,EAAZA,EAAEC,EAAU,EAAVA,KAC1B,OACI,yBAAKZ,UAAU,iBAAiBa,MAAO,CAACC,gBAAgB,mBAAoBL,EAArB,WACnD,yBAAKT,UAAU,mEAAmEU,GACjFC,EAAEI,KAAI,SAACC,EAAIC,GACR,OACI,kBAAC,EAAD,CAAcA,IAAKA,EAAKX,QAASM,EAAKM,cAAc,CAACC,GAAG,eAAgBV,EAAjB,KAAsBQ,EAAI,GAAIG,eAAgBJ,aAkD1GR,wBA3CA,SAAC,GAAY,IAAXI,EAAU,EAAVA,KACb,OACI,kBAAC,IAAD,CAAWS,WAAW,uBAClB,kBAAC,IAAD,KACI,kBAAC,mBAAD,CACIF,GAAG,mBACHC,eAAe,YAEnB,0BAAMpB,UAAU,0BAAyB,kBAAC,mBAAD,CACrCmB,GAAG,mBACHC,eAAe,YAGvB,yBAAKpB,UAAU,sCACX,yBAAKA,UAAU,+CACX,kBAAC,mBAAD,CAAkBmB,GAAG,iBAAiBC,eAAe,uNAG7D,yBAAKpB,UAAU,iCACVb,EAAS4B,KAAI,SAACC,EAAIC,GACf,OAAO,kBAAC,EAAD,CAAcA,IAAKA,EAAKvB,MAAOkB,EAAKM,cAAc,CAACC,GAAG,GAAIH,EAAIM,QAAUF,eAAgBJ,EAAItB,QAASC,KAAMiB,EAAKM,cAAc,CAACC,GAAIH,EAAIO,OAAOH,eAAgBJ,EAAIrB,OAAQF,KAAMuB,EAAIvB,KAAMG,GAAIoB,EAAIpB,GAAIC,OAAQmB,EAAInB,OAAQC,SAAUkB,EAAIQ,MAAOzB,KAAMiB,EAAIjB,WAGxQ,kBAAC,IAAD,CAAO0B,MAAM,EAAMC,SAAS,GACxB,kBAAC,mBAAD,CACIP,GAAG,qBACHC,eAAe,cAEnB,0BAAMpB,UAAU,0BAAyB,kBAAC,mBAAD,CACrCmB,GAAG,qBACHC,eAAe,mBAGvB,yBAAKpB,UAAU,uBACVV,EAAeyB,KAAI,SAACC,EAAIC,GACrB,OACI,kBAACV,EAAD,CAAqBU,IAAKA,EAAKR,EAAGQ,EAAI,EAAGP,EAAGE,EAAKM,cAAc,CAACC,GAAG,oBAAoBF,EAAI,GAAIG,eAAgBJ,EAAItB,QAASiB,EAAGK,EAAIrB,e,SCjE5IgC,UARI,WACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKjC,MAAM,iBACX,kBAAC,EAAD,S","file":"component---src-pages-howitworks-js-6748e95b150425a19919.js","sourcesContent":["import React from 'react'\nimport {injectIntl,FormattedMessage} from 'gatsby-plugin-intl'\nimport {Container,Title} from '../common'\nimport config from '../../../config/default.json'\nconst HowItems = config.howItems;\nconst HowBlock1Items = config.howBlockItems;\nconst BlockHowItem = ({path,title,desc,bg,border,classBox,none}) => {\n    return (\n        <div className={`w-full md:w-1/2 md:px-4 lg:w-1/5`} data-aos=\"fade-up\" data-aos-offset=\"-100\">\n            <div className=\"how-icon\">\n                <div className={`w-full h-full flex items-center justify-center rounded-full ${bg}`}>\n                    <img src={path} alt=\"\" className=\"mx-auto\"/>\n                </div>\n            </div>\n            <div className={`w-full text-center`}>  \n                <div className=\"text-lights-bluebold font-sans font-bold text-16 uppercase mb-2\">{title}</div>\n                <div className=\"font-sans text-lights-graylight text-14\">{desc}</div>\n            </div>\n        </div>\n    )\n}\nconst HowChildItem = ({content}) => {\n    return (\n        <div className=\"font-sans text-13 text-lights-bluebold\">\n            {content}\n        </div>\n    )\n}\nconst HowBlock1Item = ({n,t,d,intl}) => {\n    return (\n        <div className=\"how-detail-box\" style={{backgroundImage: `url('/img/how--0${n}.png')`}}>\n            <div className=\"font-sans font-bold uppercase text-16 text-lights-bluebold mb-4\">{t}</div>\n            {d.map((val,key)=>{\n                return (\n                    <HowChildItem key={key} content={intl.formatMessage({id: `how.block1.d${n}-${key+1}`,defaultMessage: val})} />\n                )\n            })}\n        </div>\n    )\n}\nconst InjectHowBlock1Item = injectIntl(HowBlock1Item);\nconst Block1 = ({intl}) => {\n    return (\n        <Container classNames=\"bg-lights-grayblack\">\n            <Title>\n                <FormattedMessage\n                    id=\"index.how.title1\"\n                    defaultMessage=\"How It \"\n                />\n                <span className=\"text-lights-orangebold\"><FormattedMessage\n                    id=\"index.how.title2\"\n                    defaultMessage=\"Works\"\n                /></span>            \n            </Title>\n            <div className=\"md:w-4/5 mx-auto text-center mb-16\">\n                <div className=\"font-sans text-14 text-lights-bluesuperbold\">\n                    <FormattedMessage id=\"how.block1.t-1\" defaultMessage=\"You will need Ethereum wallet and 0.1 ETH to get started. All the money you need for only one time is 0.1ETH to run for the whole cycle of project, the next times will use the money you have in the community.\" />\n                </div>\n            </div>\n            <div className=\"flex flex-wrap md:-mx-4 mb-16\">\n                {HowItems.map((val,key)=>{\n                    return <BlockHowItem key={key} title={intl.formatMessage({id: `${val.titleId}`,defaultMessage: val.title})} desc={intl.formatMessage({id: val.descId,defaultMessage: val.desc})} path={val.path} bg={val.bg} border={val.border} classBox={val.class} none={val.none}/>\n                })}\n            </div>\n            <Title noup={true} linetwo={true}>\n                <FormattedMessage\n                    id=\"how.block1.title-1\"\n                    defaultMessage=\"Detailed \"\n                />\n                <span className=\"text-lights-orangebold\"><FormattedMessage\n                    id=\"how.block1.title-2\"\n                    defaultMessage=\"instructions\"\n                /></span>            \n            </Title>\n            <div className=\"md:w-4/5 md:mx-auto\">\n                {HowBlock1Items.map((val,key)=>{\n                    return (\n                        <InjectHowBlock1Item key={key} n={key+1} t={intl.formatMessage({id: `index.how.title-${key+1}`,defaultMessage: val.title})} d={val.desc}/>\n                    )\n                })}\n            </div>\n        </Container>\n    )\n}\nexport default injectIntl(Block1)","import React from 'react'\nimport Layout from '../components/layout'\nimport Block1 from '../components/how/block1'\nimport Seo from '../components/seo'\nconst HowItWorks = () => {\n    return (\n        <Layout>\n            <Seo title=\"How it works\"/>\n            <Block1 />\n        </Layout>\n    )\n}\nexport default HowItWorks;"],"sourceRoot":""}